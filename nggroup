#!/bin/bash

# TODO: need to do *all* validation

debug() { echo "$@" 1>&2; }

#HTPASS_DIR=/etc/nginx/htpasswd
HTPASS_DIR=.
SITES_DIR=$HTPASS_DIR/sites
SITES_DIR_FORMAT="$SITES_DIR/.%s.rules"
USER_DIR=$HTPASS_DIR/users
USER_DIR_FORMAT="$USER_DIR/%s"
GROUP_DIR=$HTPASS_DIR/groups
GROUP_DIR_FORMAT="$GROUP_DIR/%s"
TMP_FILE=/tmp/nggrouptmp

if [ "$(id -u)" != "0" ];
then
    echo "Error; Must run as root."
    exit 1
fi


mkdir -p $HTPASS_DIR
mkdir -p $SITES_DIR
mkdir -p $USER_DIR
mkdir -p $GROUP_DIR


site () {
    local site_file
    site_file=$(printf $SITES_DIR_FORMAT $2)
    case $1 in
	siteadd )
	    if [ -e $site_file ];
	    then
		echo "Error: Site already exists."
		exit 1
	    fi
	    touch $site_file
	    ;;
	sitedel )
	    if [ ! -e $site_file ];
	    then
		echo "Error: Site does not exist."
		exit 1
	    fi
	    rm $site_file
	    ;;
	sitemod )
	    site_file=$(printf $SITES_DIR_FORMAT $2)
	    group_file=$(printf $GROUP_DIR_FORMAT $4)
	    case $3 in
		a )
		    if [ ! -e $group_file ];
		    then
			echo "Error: Group does not exist"
			exit 1
		    fi

		    if [ ! -e $site_file ];
		    then
			echo "Error: Site does not exist"
			exit 1
		    fi

		    # check if already there
		    if grep $4 $site_file > /dev/null;
		    then
			# TODO: more meaningful messages - i.e. Group 'test'
			echo "Error: Group already exists in site"
			exit 1
		    fi

		    echo $4 >> $site_file
		    ;;
		d )
		    ;;
	    esac
	    ;;
    esac
}

user () {
    local file
    file=$(printf $USER_DIR_FORMAT $2)
    
    case $1 in
	useradd )
	    contents=$(htpasswd -nb $2 $3)
	    if [ -e $file ];
	    then
		echo "Error: user already exists."
		exit 1
	    fi

	    echo $contents > $file
	    ;;
	userdel )
	    if [ ! -e $file ];
	    then
		echo "Error: User does not exist."
		exit 1
	    fi

	    rm $file
    esac
}

group () {
    local file
    file=$(printf $GROUP_DIR_FORMAT $2)
    
    case $1 in
	groupadd )
	    if [ -e $file ];
	    then
		echo "Error: group already exists."
		exit 1
	    fi

	    touch $file
	    ;;
	groupdel )
	    if [ ! -e $file ];
	    then
		echo "Error: Group does not exist."
		exit 1
	    fi

	    rm $file
    esac
}

case $1 in
    site* )
	site $@
	;;

    user* )
	user $@
	;;

    group* )
	group $@
	;;
esac

